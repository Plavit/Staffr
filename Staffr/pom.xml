<?xml version="1.0" encoding="UTF-8"?>
    <project xmlns="http://maven.apache.org/POM/4.0.0"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
        <modelVersion>4.0.0</modelVersion>

    <groupId>system</groupId>
    <artifactId>Staffr</artifactId>
    <version>1.0-SNAPSHOT</version>

        <!-- war packaging is important, otherwise Maven would try to package the application into a jar -->
        <packaging>war</packaging>

        <properties>
            <!-- Tell maven that we are using UTF-8 file encoding -->
            <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
            <!-- Tell maven we are using Java 8, by default it assumes Java 5, which is reaally old -->
            <maven.compiler.source>1.8</maven.compiler.source>
            <maven.compiler.target>1.8</maven.compiler.target>

            <!-- Declare versions as properties, so we can easily change them -->
            <org.springframework.version>5.3.18</org.springframework.version>
            <org.springframework.security.version>5.3.10.RELEASE</org.springframework.security.version>
            <com.fasterxml.jackson.version>2.10.0</com.fasterxml.jackson.version>
            <org.postgresql.version>9.4.1209</org.postgresql.version>
            <ch.qos.logback.version>1.2.0</ch.qos.logback.version>
            <junit.version>4.13.1</junit.version>
        </properties>

        <dependencies>
            <!-- JPA -->
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>eclipselink</artifactId>
                <version>2.6.2</version>
            </dependency>

            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${org.springframework.version}</version>
            </dependency>

            <!-- Spring Security -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${org.springframework.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${org.springframework.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${org.springframework.security.version}</version>
            </dependency>

            <!-- Jackson for JSON (de)serialization -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>

            <!-- Servlet-API. Necessary for web applications -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
                <scope>provided</scope> <!-- provided means that the application server provides the library -->
            </dependency>

            <!-- PostgreSQL driver -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${org.postgresql.version}</version>
            </dependency>

            <!-- H2 database for tests (it includes a JDBC driver) -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>1.4.190</version>
                <scope>test</scope>
            </dependency>

            <!-- Database connection pool -->
            <dependency>
                <groupId>com.jolbox</groupId>
                <artifactId>bonecp</artifactId>
                <version>0.8.0.RELEASE</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.12</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${ch.qos.logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${ch.qos.logback.version}</version>
            </dependency>

            <!-- Test dependencies -->

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <!-- Spring support for tests -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${org.springframework.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Mockito for mocks and test spies -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.10.19</version>
                <scope>test</scope>
            </dependency>

            <!--new dependencies-->
            <!--<dependency>-->
                <!--<groupId>com.fasterxml.jackson.module</groupId>-->
                <!--<artifactId>jackson-module-parameter-names</artifactId>-->
                <!--<version>${com.fasterxml.jackson.version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
                <!--<groupId>com.fasterxml.jackson.datatype</groupId>-->
                <!--<artifactId>jackson-datatype-jdk8</artifactId>-->
                <!--<version>${com.fasterxml.jackson.version}</version>-->
            <!--</dependency>-->

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>

        </dependencies>

        <build>
            <plugins>
                <plugin>
                    <groupId>de.struller-baumann</groupId>
                    <artifactId>visualee</artifactId>
                    <version>0.28</version>
                    <configuration>
                        <outputdirectory>visualee</outputdirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>visualize</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Compiler plugin takes care of compilation of the source codes -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
                <!-- War plugin packages the application into a deployable war archive -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <!-- Name of the produced .war file (by default, it is $artifactId-$version.war) -->
                        <warName>ear-setup</warName>
                        <!-- Exclude files and folders which are not necessary in the war -->
                        <warSourceExcludes>
                            node_modules/,package.json,.babelrc,.eslintrc
                        </warSourceExcludes>
                        <packagingExcludes>
                            node_modules/,package.json,.babelrc,.eslintrc
                        </packagingExcludes>
                    </configuration>
                </plugin>
            </plugins>
        </build>

    </project>