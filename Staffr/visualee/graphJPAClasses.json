{"nodes":[{"name":"Address","group":3,"description":"<nobr>Package: system.business</nobr><br/><br/>One to many relations:<br/><nobr>One to many relation to User</nobr><br/><nobr>One to many relation to Office</nobr>","sourcecode":"package system.business;\n\nimport javax.persistence.*;\nimport java.util.Set;\n\n/**\n * Created by krystof on 9/3/17.\n */\n\n@NamedQueries({\n        @NamedQuery(name = \"Address.findAll\", query = \"SELECT l FROM Address l\")\n})\n\n@Entity()\npublic class Address  extends AbstractBusinessObject{\n\n    @Column()\n    private String country;\n\n    @Column()\n    private String city;\n\n    @Column()\n    private int psc;\n\n    @Column()\n    private String street;\n\n    @Column()\n    private String cp;\n\n    @OneToMany(mappedBy = \"address\")\n    private Set&lt;User&gt; users;\n\n    @OneToMany(mappedBy = \"address\")\n    private Set&lt;Office&gt; offices;\n\n    public Address() {\n\n    }\n\n    public String getCountry() {\n        return country;\n    }\n\n    public void setCountry(String country) {\n        this.country = country;\n    }\n\n    public String getCity() {\n        return city;\n    }\n\n    public void setCity(String city) {\n        this.city = city;\n    }\n\n    public int getPsc() {\n        return psc;\n    }\n\n    public void setPsc(int psc) {\n        this.psc = psc;\n    }\n\n    public String getStreet() {\n        return street;\n    }\n\n    public void setStreet(String street) {\n        this.street = street;\n    }\n\n    public String getCp() {\n        return cp;\n    }\n\n    public void setCp(String cp) {\n        this.cp = cp;\n    }\n\n    public Set&lt;User&gt; getEmployees() {\n        return users;\n    }\n\n    public void setEmployees(Set&lt;User&gt; users) {\n        this.users = users;\n    }\n\n    public Set&lt;Office&gt; getOffices() {\n        return offices;\n    }\n\n    public void setOffices(Set&lt;Office&gt; offices) {\n        this.offices = offices;\n    }\n}\n","id":0},{"name":"Degree","group":3,"description":"<nobr>Package: system.business</nobr><br/><br/>Many to one relations:<br/><nobr>Many to one relation to User</nobr><br/><nobr>Many to one relation to University</nobr>","sourcecode":"package system.business;\n\nimport system.business.enums.DegreeType;\n\nimport javax.persistence.*;\nimport java.util.Date;\n\n/**\n * Created by Marek on 3.9.2017.\n */\n\n@NamedQueries({\n        @NamedQuery(name = \"Degree.findByName\",\n                query = \"SELECT l FROM Degree l WHERE LOWER(l.name) = :name\"),\n\n        @NamedQuery(name = \"Degree.findAll\", query = \"SELECT l FROM Degree l\")\n})\n\n@Entity\npublic class Degree extends AbstractBusinessObject {\n\n    @Enumerated()\n    private DegreeType type;\n\n    @Column()\n    private String name;\n\n    @Column(name = \"startingDate\")\n    private Date from;\n\n    @Column(name = \"endingDate\")\n    private Date to;\n\n    public Degree() {\n\n    }\n\n    @ManyToOne()\n    @JoinColumn(name = \"USER_ID\")\n    private User user;\n\n    @ManyToOne()\n    @JoinColumn(name=\"UNIVERSITY_ID\")\n    private University university;\n\n    public DegreeType getType() {\n        return type;\n    }\n\n    public void setType(DegreeType type) {\n        this.type = type;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public Date getFrom() {\n        return from;\n    }\n\n    public void setFrom(Date from) {\n        this.from = from;\n    }\n\n    public Date getTo() {\n        return to;\n    }\n\n    public void setTo(Date to) {\n        this.to = to;\n    }\n\n    public User getEmployee() {\n        return user;\n    }\n\n    public void setEmployee(User user) {\n        this.user = user;\n    }\n\n    public University getUniversity() {\n        return university;\n    }\n\n    public void setUniversity(University university) {\n        this.university = university;\n    }\n}\n","id":1},{"name":"Position","group":3,"description":"<nobr>Package: system.business</nobr><br/><br/>Many to one relations:<br/><nobr>Many to one relation to User</nobr>","sourcecode":"package system.business;\n\nimport javax.persistence.*;\nimport java.util.Set;\n\n/**\n * Created by krystof on 9/3/17.\n */\n\n@NamedQueries({\n        @NamedQuery(name = \"Position.findByName\",\n                query = \"SELECT l FROM Position l WHERE LOWER(l.name) = :name\"),\n\n        @NamedQuery(name = \"Position.findAll\", query = \"SELECT l FROM Position l\")\n})\n\n@Entity\npublic class Position extends AbstractBusinessObject {\n\n    private String name;\n\n    @ManyToOne\n    @JoinColumn(name=\"USER_ID\", nullable=false)\n    public User user;\n\n    public Position() {\n\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n}\n","id":2},{"name":"Project","group":3,"description":"<nobr>Package: system.business</nobr><br/><br/>One to many relations:<br/><nobr>One to many relation to UserProject</nobr>","sourcecode":"package system.business;\n\nimport javax.persistence.*;\nimport java.util.Date;\nimport java.util.Set;\n\n/**\n * Created by krystof on 9/3/17.\n */\n@NamedQueries({\n        @NamedQuery(name = \"Project.findByName\",\n                query = \"SELECT l FROM Project l WHERE LOWER(l.name) = :name\"),\n\n        @NamedQuery(name = \"Project.findAll\", query = \"SELECT l FROM Project l\")\n})\n\n@Entity()\npublic class Project extends AbstractBusinessObject {\n\n    private String name;\n\n\n    private String description;\n\n\n    private Set&lt;String&gt; goals;\n\n\n    private Date startOfProject;\n\n\n    private Date endOfProject;\n\n    @OneToMany(mappedBy = \"project\",cascade = CascadeType.PERSIST)\n    private Set&lt;UserProject&gt; userProject;\n\n    public Project() {\n\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n\n    public Set&lt;String&gt; getGoals() {\n        return goals;\n    }\n\n    public void setGoals(Set&lt;String&gt; goals) {\n        this.goals = goals;\n    }\n\n    public Date getStartOfProject() {\n        return startOfProject;\n    }\n\n    public void setStartOfProject(Date startOfProject) {\n        this.startOfProject = startOfProject;\n    }\n\n    public Date getEndOfProject() {\n        return endOfProject;\n    }\n\n    public void setEndOfProject(Date endOfProject) {\n        this.endOfProject = endOfProject;\n    }\n\n    public Set&lt;UserProject&gt; getUserProject() {\n        return userProject;\n    }\n\n    public void setUserProject(Set&lt;UserProject&gt; userProject) {\n        this.userProject = userProject;\n    }\n}\n","id":3},{"name":"University","group":3,"description":"<nobr>Package: system.business</nobr>","sourcecode":"package system.business;\n\nimport javax.persistence.*;\n\n/**\n * Created by Marek on 3.9.2017.\n */\n\n@NamedQueries({\n        @NamedQuery(name = \"University.findByName\",\n                query = \"SELECT l FROM University l WHERE LOWER(l.name) = :name\"),\n\n        @NamedQuery(name = \"University.findAll\", query = \"SELECT l FROM University l\")\n})\n\n@Entity\npublic class University extends AbstractBusinessObject {\n\n    @Column()\n    private String name;\n\n    public University() {\n\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n}\n","id":4},{"name":"Office","group":3,"description":"<nobr>Package: system.business</nobr><br/><br/>One to many relations:<br/><nobr>One to many relation to User</nobr><br/><br/>Many to one relations:<br/><nobr>Many to one relation to Address</nobr>","sourcecode":"package system.business;\n\nimport javax.persistence.*;\nimport java.util.Set;\n\n/**\n * Created by krystof on 9/3/17.\n */\n\n\n@NamedQueries({\n        @NamedQuery(name = \"Office.findByName\",\n                query = \"SELECT l FROM Office l WHERE LOWER(l.name) = :name\"),\n\n        @NamedQuery(name = \"Office.findAll\", query = \"SELECT l FROM Office l\")\n})\n\n\n\n\n@Entity\npublic class Office extends AbstractBusinessObject {\n\n    @Column()\n    private String name;\n\n    @Column()\n    private String note;\n\n    @OneToMany()\n    private Set&lt;User&gt; user;\n\n    @ManyToOne()\n    @JoinColumn(name = \"ADDRESS_ID\")\n    private Address address;\n\n    public Office() {\n\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getNote() {\n        return note;\n    }\n\n    public void setNote(String note) {\n        this.note = note;\n    }\n\n    public Set&lt;User&gt; getEmployee() {\n        return user;\n    }\n\n    public void setEmployee(Set&lt;User&gt; user) {\n        this.user = user;\n    }\n\n    public Address getAddress() {\n        return address;\n    }\n\n    public void setAddress(Address address) {\n        this.address = address;\n    }\n}\n","id":5},{"name":"User","group":3,"description":"<nobr>Package: system.business</nobr><br/><br/>One to many relations:<br/><nobr>One to many relation to Degree</nobr><br/><nobr>One to many relation to Position</nobr><br/><nobr>One to many relation to Skill</nobr><br/><nobr>One to many relation to UserProject</nobr><br/><br/>Many to many relations:<br/><nobr>Many to many relation to User</nobr><br/><nobr>Many to many relation to User</nobr><br/><br/>Many to one relations:<br/><nobr>Many to one relation to Office</nobr><br/><nobr>Many to one relation to Address</nobr>","sourcecode":"package system.business;\n\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport system.business.enums.Role;\nimport system.business.enums.Status;\n\nimport javax.persistence.*;\nimport java.util.Set;\n\n@NamedQueries({\n        @NamedQuery(name = \"User.findByName\", query = \"SELECT l FROM User l WHERE LOWER(l.firstName) = :firstName AND LOWER(l.lastName) = :lastName\"),\n        @NamedQuery(name = \"User.findByUsername\", query = \"SELECT p FROM User p WHERE p.userName=:username\"),\n        @NamedQuery(name = \"User.deleteById\", query = \"DELETE FROM User p WHERE p.id=:id\"),\n        @NamedQuery(name = \"User.findAll\", query = \"SELECT l FROM User l\")\n})\n\n\n@Entity\n@Table(name = \"usr\")\npublic class User extends AbstractBusinessObject {\n\n    private String userName;\n    private String password;\n    private Role role;\n    private String firstName;\n    private String lastName;\n    private int birthYear;\n    private String email;\n    private String note;\n    private int phoneNumber;\n    private Status active;\n\n    @ManyToMany()\n    @JoinTable(name = \"USER_MANAGER\",\n            joinColumns = @JoinColumn(name = \"USER_ID\", referencedColumnName = \"ID\"),\n            inverseJoinColumns = @JoinColumn(name = \"MANAGER_ID\", referencedColumnName = \"ID\")\n    )\n    private Set&lt;User&gt; managers;\n\n    @ManyToMany()\n    @JoinTable(name = \"MANAGER_USER\",\n            joinColumns = @JoinColumn(name = \"MANAGER_ID\", referencedColumnName = \"ID\"),\n            inverseJoinColumns = @JoinColumn(name = \"USER_ID\", referencedColumnName = \"ID\")\n    )\n    private Set&lt;User&gt; users;\n\n    @OneToMany(mappedBy = \"user\", orphanRemoval=true)\n    private Set&lt;Degree&gt; degrees;\n\n    @OneToMany(mappedBy = \"user\", orphanRemoval=true)\n    private Set&lt;Position&gt; positions;\n\n    @OneToMany(mappedBy = \"user\", orphanRemoval=true)\n    private Set&lt;Skill&gt; skills;\n\n    @ManyToOne()\n    @JoinColumn(name = \"OFFICE_ID\")\n    private Office office;\n\n    @ManyToOne()\n    @JoinColumn(name = \"ADDRESS_ID\")\n    private Address address;\n\n    @OneToMany(mappedBy = \"user\",cascade = CascadeType.PERSIST)\n    private Set&lt;UserProject&gt; userProjects;\n\n    public User() {\n    }\n\n    public User(String userName, String password, Role role) {\n        this.userName = userName;\n        this.password = password;\n        this.role = role;\n    }\n\n    public User(String firstName, String lastName, int birthYear, String email, String note, int phoneNumber, Status active) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.birthYear = birthYear;\n        this.email = email;\n        this.note = note;\n        this.phoneNumber = phoneNumber;\n        this.active = active;\n    }\n\n    public User(String userName, String password, Role role, String firstName, String lastName, int birthYear, String email, String note, int phoneNumber, Status active) {\n        this.userName = userName;\n        this.password = password;\n        this.role = role;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.birthYear = birthYear;\n        this.email = email;\n        this.note = note;\n        this.phoneNumber = phoneNumber;\n        this.active = active;\n    }\n\n    public void encodePassword(PasswordEncoder encoder) {\n        if (password == null || password.isEmpty()) {\n            throw new IllegalStateException(\"Cannot encode an empty password.\");\n        }\n        this.password = encoder.encode(password);\n    }\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public Role getRole() {\n        return role;\n    }\n\n    public void setRole(Role role) {\n        this.role = role;\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public void setFirstName(String firstName) {\n        this.firstName = firstName;\n    }\n\n    public String getLastName() {\n        return lastName;\n    }\n\n    public void setLastName(String lastName) {\n        this.lastName = lastName;\n    }\n\n    public int getBirthYear() {\n        return birthYear;\n    }\n\n    public void setBirthYear(int birthYear) {\n        this.birthYear = birthYear;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public String getNote() {\n        return note;\n    }\n\n    public void setNote(String note) {\n        this.note = note;\n    }\n\n    public int getPhoneNumber() {\n        return phoneNumber;\n    }\n\n    public void setPhoneNumber(int phoneNumber) {\n        this.phoneNumber = phoneNumber;\n    }\n\n    public Status getActive() {\n        return active;\n    }\n\n    public void setActive(Status active) {\n        this.active = active;\n    }\n\n    public Set&lt;User&gt; getManagers() {\n        return managers;\n    }\n\n    public void setManagers(Set&lt;User&gt; managers) {\n        this.managers = managers;\n    }\n\n    public Set&lt;User&gt; getUsers() {\n        return users;\n    }\n\n    public void setUsers(Set&lt;User&gt; users) {\n        this.users = users;\n    }\n\n    public Set&lt;Degree&gt; getDegrees() {\n        return degrees;\n    }\n\n    public void setDegrees(Set&lt;Degree&gt; degrees) {\n        this.degrees = degrees;\n    }\n\n    public Set&lt;Position&gt; getPositions() {\n        return positions;\n    }\n\n    public void setPositions(Set&lt;Position&gt; positions) {\n        this.positions = positions;\n    }\n\n    public Set&lt;Skill&gt; getSkills() {\n        return skills;\n    }\n\n    public void setSkills(Set&lt;Skill&gt; skills) {\n        this.skills = skills;\n    }\n\n    public Office getOffice() {\n        return office;\n    }\n\n    public void setOffice(Office office) {\n        this.office = office;\n    }\n\n    public Address getAddress() {\n        return address;\n    }\n\n    public void setAddress(Address address) {\n        this.address = address;\n    }\n\n    public Set&lt;UserProject&gt; getUserProjects() {\n        return userProjects;\n    }\n\n    public void setUserProjects(Set&lt;UserProject&gt; userProjects) {\n        this.userProjects = userProjects;\n    }\n}\n","id":6},{"name":"UserProject","group":3,"description":"<nobr>Package: system.business</nobr><br/><br/>Many to one relations:<br/><nobr>Many to one relation to User</nobr><br/><nobr>Many to one relation to Project</nobr>","sourcecode":"package system.business;\n\nimport javax.persistence.*;\nimport java.util.Date;\n\n/**\n * Created by krystof on 9/3/17.\n */\n\n//@NamedQueries({\n//        @NamedQuery(name = \"UserProject.findByUserAndStartingDate\",\n//                query = \"SELECT l FROM UserProject l WHERE l.user_id = :userID \" +\n//                        \"AND l.from = :startingDate\"),\n//})\n\n@Entity()\npublic class UserProject extends AbstractBusinessObject {\n\n    @Column()\n    private String role;\n\n    @Column(name = \"starting_date\")\n    private Date from;\n\n    @Column(name = \"ending_date\")\n    private Date end;\n\n    @ManyToOne()\n    @JoinColumn(name = \"USER_ID\")\n    private User user;\n\n    @ManyToOne()\n    @JoinColumn(name = \"PROJECT_ID\")\n    private Project project;\n\n    public UserProject() {\n\n    }\n\n    public String getRole() {\n        return role;\n    }\n\n    public void setRole(String role) {\n        this.role = role;\n    }\n\n    public Date getFrom() {\n        return from;\n    }\n\n    public void setFrom(Date from) {\n        this.from = from;\n    }\n\n    public Date getEnd() {\n        return end;\n    }\n\n    public void setEnd(Date end) {\n        this.end = end;\n    }\n\n    public User getEmployee() {\n        return user;\n    }\n\n    public void setEmployee(User user) {\n        this.user = user;\n    }\n\n    public Project getProject() {\n        return project;\n    }\n\n    public void setProject(Project project) {\n        this.project = project;\n    }\n}\n","id":7},{"name":"Skill","group":3,"description":"<nobr>Package: system.business</nobr><br/><br/>Many to one relations:<br/><nobr>Many to one relation to User</nobr>","sourcecode":"package system.business;\n\n/**\n * Created by Marek on 3.9.2017.\n */\n\nimport system.business.enums.SkillProfficiency;\n\nimport javax.persistence.*;\n\n@NamedQueries({\n        @NamedQuery(name = \"Skill.findByName\",\n                query = \"SELECT l FROM Skill l WHERE LOWER(l.name) = :name\"),\n\n        @NamedQuery(name = \"Skill.findAll\", query = \"SELECT l FROM Skill l\")\n})\n\n@Entity\npublic class Skill extends AbstractBusinessObject {\n\n    @Column()\n    private String name;\n\n    @Enumerated()\n    private SkillProfficiency profficiency;\n\n    @ManyToOne\n    User user;\n\n    public Skill() {\n\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public SkillProfficiency getProfficiency() {\n        return profficiency;\n    }\n\n    public void setProfficiency(SkillProfficiency profficiency) {\n        this.profficiency = profficiency;\n    }\n\n    public User getEmployee() {\n        return user;\n    }\n\n    public void setEmployee(User user) {\n        this.user = user;\n    }\n}\n","id":8}],"links":[{"source":7,"target":6,"value":1,"type":"MANY_TO_ONE"},{"source":7,"target":3,"value":1,"type":"MANY_TO_ONE"},{"source":2,"target":6,"value":1,"type":"MANY_TO_ONE"},{"source":5,"target":6,"value":1,"type":"ONE_TO_MANY"},{"source":5,"target":0,"value":1,"type":"MANY_TO_ONE"},{"source":3,"target":7,"value":1,"type":"ONE_TO_MANY"},{"source":6,"target":6,"value":1,"type":"MANY_TO_MANY"},{"source":6,"target":6,"value":1,"type":"MANY_TO_MANY"},{"source":6,"target":1,"value":1,"type":"ONE_TO_MANY"},{"source":6,"target":2,"value":1,"type":"ONE_TO_MANY"},{"source":6,"target":8,"value":1,"type":"ONE_TO_MANY"},{"source":6,"target":5,"value":1,"type":"MANY_TO_ONE"},{"source":6,"target":0,"value":1,"type":"MANY_TO_ONE"},{"source":6,"target":7,"value":1,"type":"ONE_TO_MANY"},{"source":1,"target":6,"value":1,"type":"MANY_TO_ONE"},{"source":1,"target":4,"value":1,"type":"MANY_TO_ONE"},{"source":0,"target":6,"value":1,"type":"ONE_TO_MANY"},{"source":0,"target":5,"value":1,"type":"ONE_TO_MANY"},{"source":8,"target":6,"value":1,"type":"MANY_TO_ONE"}]}
